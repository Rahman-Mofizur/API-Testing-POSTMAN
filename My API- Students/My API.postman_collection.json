{
	"info": {
		"_postman_id": "9dd0c6e8-8c5b-4ba1-86a2-7df749c99da6",
		"name": "My API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27236938",
		"_collection_link": "https://lively-shadow-838112.postman.co/workspace/Mofizur's-Workspace~fa5cb92d-7997-45bd-a561-33cc2537ee40/collection/27236938-9dd0c6e8-8c5b-4ba1-86a2-7df749c99da6?action=share&creator=27236938&source=collection_link"
	},
	"item": [
		{
			"name": "Get Students",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1\r",
							"// Status Check= 200 (by value)\r",
							"pm.test(\"Test-Name: Status code 200 Ok, using Normal Function\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Test-Name: Status code 200 Ok, Using Arrow Function\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// OR Status Check= OK (by Key)\r",
							"pm.test(\"Test-Name: GET Status check Successful\", ()=> {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"})\r",
							"\r",
							"// Another way, Multiple Status Check\r",
							"pm.test(\"Test-Name: Get Status code for one of the staus code 200 or 201\", () => {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"})\r",
							"\r",
							"\r",
							"// 2\r",
							"// Content-Type in Headers\r",
							"pm.test(\"Test-Name: Content Type, Okay\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"\r",
							"// Checking Content-Type value\r",
							"pm.test(\"Test-Name: Content-Type = application/json, Okay \", ()=> {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"// 3. Testing the response time & Response size\r",
							"pm.test(\"Test-Name: Response Time must be below 100 ms.\", ()=> {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(100);\r",
							"});\r",
							"\r",
							"// 4. Testing Response Body for a single Student using array of jsonData, which choose 1 student as a time \r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test-Name: Every Student is an object here. Check it!\", ()=> {\r",
							"    pm.expect(jsonData[0]).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"//  We can also check the response body of student properties like id, name, ect. \r",
							"pm.test(\"Test-Name: Every Student is an object & Every Student has some other Data types like: Name is string, id is integer/ number, courses are array. Checking it!\", ()=> {\r",
							"    pm.expect(jsonData[0]).to.be.an(\"object\");\r",
							"    pm.expect(jsonData[0].id).to.be.a(\"number\");\r",
							"    pm.expect(jsonData[0].name).to.be.a(\"string\");\r",
							"    pm.expect(jsonData[0].courses).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test-Name: Json Data types are ok\", ()=> {\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/students/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Student",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Dihan Mahmud\",\r\n    \"location\": \"Chittagong\",\r\n    \"phone\": \"01919749696\",\r\n    \"courses\": [\r\n        \"Designing\",\r\n        \"AutoCAD\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Student",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Riduanul Karim Mohin\",\r\n    \"location\": \"Dhaka\",\r\n    \"phone\": \"01779749696\",\r\n    \"courses\": [\r\n        \"PHP\",\r\n        \"Laravel\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a Student Copy",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"courses\": [\r\n        \"IELTS\",\r\n        \"Economics\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Student",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"courses\": [\r\n        \"IELTS\",\r\n        \"Economics\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/students/8",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"students",
						"8"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}